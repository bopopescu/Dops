# Generated by Django 2.2.5 on 2019-11-20 14:23

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('cmdb', '0003_auto_20191119_2251'),
    ]

    operations = [
        migrations.CreateModel(
            name='IDC',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('idc_name', models.CharField(max_length=255, unique=True, verbose_name='机房名称')),
                ('idc_contact', models.CharField(blank=True, max_length=255, null=True, verbose_name='联系方式')),
            ],
            options={
                'verbose_name': 'IDC机房',
                'verbose_name_plural': 'IDC机房',
            },
        ),
        migrations.RenameField(
            model_name='server',
            old_name='inside_ip',
            new_name='intranet_ip',
        ),
        migrations.RemoveField(
            model_name='service',
            name='Server',
        ),
        migrations.AddField(
            model_name='app',
            name='app_init',
            field=models.CharField(default='n', help_text='n:需要重新初始化,y:已完成初始化', max_length=10, verbose_name='是否已初始化'),
        ),
        migrations.AddField(
            model_name='app',
            name='app_status',
            field=models.SmallIntegerField(choices=[(1, '在线,需监控'), (4, '在线,暂停监控'), (9, '下线')], default=4, help_text='是否加入监控', verbose_name='服务状态'),
        ),
        migrations.AddField(
            model_name='app',
            name='app_type',
            field=models.SmallIntegerField(choices=[(0, 'base'), (1, 'api'), (2, 'web')], default=0, help_text='0:基础服务(base);1:api;2:web', verbose_name='应用类型'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='app',
            name='domain',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='服务域名'),
        ),
        migrations.AddField(
            model_name='app',
            name='name_cn',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='应用中文名称'),
        ),
        migrations.AddField(
            model_name='app',
            name='package_name',
            field=models.CharField(blank=True, help_text='self.name.jar', max_length=100, verbose_name='服务包名'),
        ),
        migrations.AddField(
            model_name='app',
            name='parameter',
            field=models.CharField(blank=True, default="'-Xms512m -Xmx512m'", max_length=500, verbose_name='启动参数'),
        ),
        migrations.AddField(
            model_name='app',
            name='service_ports',
            field=models.CharField(blank=True, max_length=100, null=True, verbose_name='服务端口'),
        ),
        migrations.AddField(
            model_name='asset',
            name='asset_project',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='project', to='cmdb.Project', verbose_name='所属项目'),
        ),
        migrations.AddField(
            model_name='asset',
            name='asset_type',
            field=models.CharField(blank=True, choices=[('server', '服务器'), ('network', '网络设备'), ('storage', '存储设备'), ('software', '软件资产')], default='server', max_length=64, verbose_name='资产类型'),
        ),
        migrations.AddField(
            model_name='asset',
            name='create_time',
            field=models.DateTimeField(auto_created=True, blank=True, default=django.utils.timezone.now, verbose_name='采购时间'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='asset',
            name='modity_time',
            field=models.DateTimeField(auto_now=True, verbose_name='修改时间'),
        ),
        migrations.AddField(
            model_name='asset',
            name='remark',
            field=models.TextField(blank=True, null=True, verbose_name='备注'),
        ),
        migrations.AddField(
            model_name='asset',
            name='status',
            field=models.SmallIntegerField(blank=True, choices=[(0, '新购'), (1, '初始化'), (2, '备用'), (3, '在线'), (4, '故障'), (5, '下线')], default=0, verbose_name='资产状态'),
        ),
        migrations.AddField(
            model_name='product',
            name='create_time',
            field=models.DateTimeField(auto_created=True, blank=True, default=django.utils.timezone.now, verbose_name='创建时间'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='product',
            name='modity_time',
            field=models.DateTimeField(auto_now=True, verbose_name='更新时间'),
        ),
        migrations.AddField(
            model_name='project',
            name='create_time',
            field=models.DateTimeField(auto_created=True, blank=True, default=django.utils.timezone.now, verbose_name='创建时间'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='project',
            name='leader',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='leader', to=settings.AUTH_USER_MODEL, verbose_name='项目负责人'),
        ),
        migrations.AddField(
            model_name='project',
            name='members',
            field=models.ManyToManyField(blank=True, related_name='members', to=settings.AUTH_USER_MODEL, verbose_name='项目成员'),
        ),
        migrations.AddField(
            model_name='project',
            name='modity_time',
            field=models.DateTimeField(auto_now=True, verbose_name='更新时间'),
        ),
        migrations.AddField(
            model_name='server',
            name='cpu',
            field=models.CharField(blank=True, max_length=50, null=True, verbose_name='cpu核数'),
        ),
        migrations.AddField(
            model_name='server',
            name='disk',
            field=models.CharField(blank=True, max_length=100, null=True, verbose_name='磁盘大小'),
        ),
        migrations.AddField(
            model_name='server',
            name='host_on',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='host_on_server', to='cmdb.Server', verbose_name='宿主机'),
        ),
        migrations.AddField(
            model_name='server',
            name='memory',
            field=models.CharField(blank=True, max_length=100, null=True, verbose_name='内存大小'),
        ),
        migrations.AddField(
            model_name='server',
            name='os',
            field=models.CharField(blank=True, default='Centos 7.5', max_length=100, verbose_name='操作系统版本'),
        ),
        migrations.AddField(
            model_name='server',
            name='server_model',
            field=models.CharField(blank=True, max_length=100, null=True, verbose_name='服务器型号'),
        ),
        migrations.AddField(
            model_name='server',
            name='server_remark',
            field=models.TextField(blank=True, null=True, verbose_name='服务器备注'),
        ),
        migrations.AddField(
            model_name='server',
            name='sub_asset_type',
            field=models.SmallIntegerField(choices=[(0, '物理机'), (1, '虚拟机'), (2, '云主机')], default=0, verbose_name='服务器类型'),
        ),
        migrations.AddField(
            model_name='service',
            name='cluster_type',
            field=models.CharField(blank=True, choices=[('standlone', '单机模式'), ('master-slave', '主从模式'), ('cluster', '高可用模式')], default='standlone', max_length=50, verbose_name='集群模式'),
        ),
        migrations.AddField(
            model_name='service',
            name='remark',
            field=models.TextField(blank=True, null=True, verbose_name='备注'),
        ),
        migrations.AddField(
            model_name='service',
            name='server',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='server', to='cmdb.Server', verbose_name='部署主机'),
        ),
        migrations.AddField(
            model_name='service',
            name='service_type',
            field=models.SmallIntegerField(blank=True, choices=[(0, '消息队列'), (1, '数据库'), (2, '中间件')], default=0, verbose_name='服务类型'),
        ),
        migrations.AlterField(
            model_name='app',
            name='name',
            field=models.CharField(max_length=100, verbose_name='应用服务名称'),
        ),
        migrations.AlterField(
            model_name='server',
            name='asset',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='cmdb.Asset'),
        ),
        migrations.AlterField(
            model_name='server',
            name='public_ip',
            field=models.GenericIPAddressField(unique=True, verbose_name='公网地址'),
        ),
        migrations.AlterField(
            model_name='service',
            name='name',
            field=models.CharField(max_length=100, verbose_name='服务名称'),
        ),
        migrations.AlterField(
            model_name='service',
            name='version',
            field=models.CharField(blank=True, max_length=100, verbose_name='服务版本'),
        ),
        migrations.AlterUniqueTogether(
            name='project',
            unique_together={('product', 'name')},
        ),
        migrations.AlterModelTable(
            name='product',
            table=None,
        ),
        migrations.CreateModel(
            name='Env',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='环境名称')),
                ('code', models.CharField(max_length=50, verbose_name='环境标识')),
            ],
            options={
                'verbose_name': '环境信息表',
                'verbose_name_plural': '环境信息表',
                'unique_together': {('name', 'code')},
            },
        ),
        migrations.AddField(
            model_name='asset',
            name='idc',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='idc', to='cmdb.IDC', verbose_name='所属机房'),
        ),
        migrations.AddField(
            model_name='server',
            name='env',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='env', to='cmdb.Env'),
        ),
    ]
